@model List<EventManagementProject.Models.Event>

@{
    ViewData["Title"] = "Event List";
}

<h2>Event List</h2>

<!-- Search and Filter Form -->
<form asp-action="Index" method="get" class="mb-4">
    <div class="form-row align-items-end">
        <div class="col">
            <label for="searchString" class="control-label">Search by Title</label>
            <input id="searchString" name="searchString" class="form-control" placeholder="Enter event title" />
        </div>
        <div class="col">
            <label for="categoryId" class="control-label">Filter by Category</label>
            <select id="categoryId" name="categoryId" class="form-control" asp-items="@ViewBag.Categories">
                <option value="">All Categories</option>
            </select>
        </div>
        <div class="col">
            <label for="startDate" class="control-label">Filter by Start Date</label>
            <input id="startDate" name="startDate" type="date" class="form-control" />
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>

<!-- Create New Event Button -->
<a asp-action="Create" class="btn btn-primary mb-3">Create New Event</a>

<!-- Event List Table -->
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Event Title</th>
            <th>Description</th>
            <th>Location</th>
            <th>Start Time</th>
            <th>Category</th>
            <th>Attendee Count</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="event-row-@item.EventID">
                <td class="event-title">@item.Title</td>
                <td class="event-description">@(item.Description ?? "")</td>
                <td class="event-location">@(item.Location ?? "")</td>
                <td class="event-start-time">@item.StartTime</td>
                <td class="event-category">@(item.EventCategory?.CategoryName ?? "No category")</td>
                <td id="attendee-count-@item.EventID" class="event-attendee-count">@(item.Attendees?.Count ?? 0)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.EventID" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.EventID" class="btn btn-info btn-sm">Details</a>
                    <form asp-action="Delete" asp-route-id="@item.EventID" method="post" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this event?')">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- JavaScript for SignalR -->
<script src="~/lib/microsoft-signalr/signalr.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/eventHub")
        .build();

    // Update attendee count
    connection.on("ReceiveAttendeeUpdate", (eventId, attendeeCount) => {
        const countElement = document.getElementById(`attendee-count-${eventId}`);
        if (countElement) {
            countElement.innerText = attendeeCount;
        }
    });

    // Update event information
    connection.on("ReceiveEventUpdate", (eventId, eventData) => {
        const row = document.getElementById(`event-row-${eventId}`);
        if (row) {
            row.querySelector('.event-title').innerText = eventData.title;
            row.querySelector('.event-description').innerText = eventData.description || '';
            row.querySelector('.event-location').innerText = eventData.location || '';
            row.querySelector('.event-start-time').innerText = new Date(eventData.startTime).toLocaleString();
            row.querySelector('.event-category').innerText = eventData.categoryName;
            row.querySelector('.event-attendee-count').innerText = eventData.attendeeCount;
        }
    });

    connection.start().catch(err => console.error(err));
</script>